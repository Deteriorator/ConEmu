# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
  branches:
    include:
    - master
    - daily

pool:
  vmImage: 'windows-latest'

variables:
  solution: 'src/CE.sln'

jobs:

- job: 'x64|Release'
  variables:
    platform: 'x64'
    configuration: 'Release'
  steps:
  - checkout: self
    submodules: true
  - task: VSBuild@1
    name: 'Build $(platform)|$(configuration)'
    inputs:
      solution: '$(solution)'
      platform: '$(platform)'
      configuration: '$(configuration)'
  - script: |
      set
      cd
      call "$(configuration)\Tests_$(configuration)_$(platform).exe"
    name: 'Tests $(platform)|$(configuration)'
    failOnStderr: true

- job: 'x64|Debug'
  variables:
    platform: 'x64'
    configuration: 'Debug'
  steps:
  - checkout: self
    submodules: true
  - task: VSBuild@1
    name: 'Build $(platform)|$(configuration)'
    inputs:
      solution: '$(solution)'
      platform: '$(platform)'
      configuration: '$(configuration)'
  - script: |
      set
      cd
      call "$(configuration)\Tests_$(configuration)_$(platform).exe"
    name: 'Tests $(platform)|$(configuration)'
    failOnStderr: true

- job: 'Win32|Release'
  variables:
    platform: 'Win32'
    configuration: 'Release'
  steps:
  - checkout: self
    submodules: true
  - task: VSBuild@1
    name: 'Build $(platform)|$(configuration)'
    inputs:
      solution: '$(solution)'
      platform: '$(platform)'
      configuration: '$(configuration)'
  - script: |
      set
      cd
      call "$(configuration)\Tests_$(configuration)_$(platform).exe"
    name: 'Tests $(platform)|$(configuration)'
    failOnStderr: true

- job: 'Win32|Debug'
  variables:
    platform: 'Win32'
    configuration: 'Debug'
  steps:
  - checkout: self
    submodules: true
  - task: VSBuild@1
    name: 'Build $(platform)|$(configuration)'
    inputs:
      solution: '$(solution)'
      platform: '$(platform)'
      configuration: '$(configuration)'
  - script: |
      set
      cd
      call "$(configuration)\Tests_$(configuration)_$(platform).exe"
    name: 'Tests $(platform)|$(configuration)'
    failOnStderr: true
